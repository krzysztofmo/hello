---
- name: (Elixir) Get mix deps
  local_action: shell docker exec -i {{ docker_app }} bash -c "cd {{ dir_rsync_cache }} && MIX_ENV={{ mix_env }} mix deps.get --only prod"

- name: (Elixir) Compile
  local_action: shell docker exec -i {{ docker_app }} bash -c "cd {{ dir_rsync_cache }} && MIX_ENV={{ mix_env }} mix compile"

- name: (JavaScript) Get node modules (yarn install)
  local_action: shell docker exec -i {{ docker_app }} bash -c "cd {{ dir_rsync_cache }}/assets && yarn install"

- name: (JavaScript) Build assets
  local_action: shell docker exec -i {{ docker_app }} bash -c "cd {{ dir_rsync_cache }}/assets && yarn build-prod"

- name: Digest assets
  local_action: shell docker exec -i {{ docker_app }} bash -c "cd {{ dir_rsync_cache }} && MIX_ENV={{ mix_env }} mix phx.digest"

- name: Delete old release (_build/prod/rel)
  local_action: shell docker exec -i {{ docker_app }} bash -c "cd {{ dir_rsync_cache }} && rm -rf _build/prod/rel"

- name: Create a release (_build/prod/rel)
  local_action: shell docker exec -i {{ docker_app }} bash -c "cd {{ dir_rsync_cache }} && MIX_ENV={{ mix_env }} mix distillery.release --env={{ mix_env }}"
