# The directory Mix will write compiled artifacts to.
/_build/

# If you run "mix test --cover", coverage assets end up here.
/cover/

# The directory Mix downloads your dependencies sources to.
/deps/

# Where 3rd-party dependencies like ExDoc output generated docs.
/doc/

# Ignore .fetch files in case you like to edit your project deps locally.
/.fetch

# If the VM crashes, it generates a dump, let's ignore it too.
erl_crash.dump

# Also ignore archive artifacts (built via "mix archive.build").
*.ez

# Ignore package tarball (built via "mix hex.build").
hello-*.tar

# Since we are building assets from assets/,
# we ignore priv/static. You may want to comment
# this depending on your deployment strategy.
/priv/static/

#####################
# JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm
# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# Directory based project:
/.idea

## File-based project format:
*.iws
*.ipr
*.iml

## Plugin-specific files:
# IntelliJ
/out

#####################
# Node
# Based on: https://github.com/github/gitignore/blob/master/Node.gitignore

# Dependency directories
/assets/node_modules
/assets/.npm

# Spritesmith artifacts
/assets/spritesmith-generated

# Logs
npm-debug.log*

# Optional eslint cache
.eslintcache

#####################
# Kontomatik deployment script

## Path, which contains project files rsynced to server
/.rsync_cache

##
deploy.retry